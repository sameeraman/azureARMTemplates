{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "VM Name"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Server Admin Username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Server Admin Password"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Resource Group"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "vnetSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Subnet Name"
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "name": "[toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "name": "[concat(parameters('vmName'),'-PIP1')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(parameters('vmName'))]"
                }
            }
        },
        {
            "name": "[concat(parameters('vmName'),'-NIC1')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmName'),'-PIP1'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmName'),'-PIP1'))]"
                            },
                            "subnet": {
                                "id": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('vnetSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id))))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), '-NIC1'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'), '-DISK1')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), '-NIC1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))), '2015-06-15').primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "name": "[concat( parameters('vmName'),'AzureDiagnostics')]",
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "xmlCfg": "[base64('<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http: //schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <Logs scheduledTransferPeriod=\"PT1M\" scheduledTransferLogLevelFilter=\"Error\" /> <Directories scheduledTransferPeriod=\"PT1M\"> <IISLogs containerName =\"wad-iis-logfiles\" /> <FailedRequestLogs containerName =\"wad-failedrequestlogs\" /> </Directories> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*\" /> </WindowsEventLog> <CrashDumps containerName=\"wad-crashdumps\" dumpType=\"Mini\"> <CrashDumpConfiguration processName=\"WaIISHost.exe\"/> <CrashDumpConfiguration processName=\"WaWorkerHost.exe\"/> <CrashDumpConfiguration processName=\"w3wp.exe\"/> </CrashDumps> <PerformanceCounters scheduledTransferPeriod=\"PT1M\"> <PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available MBytes\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\ISAPI Extension Requests/sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\Web Service(_Total)\\Bytes Total/Sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Requests/Sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET Applications(__Total__)\\Errors Total/Sec\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Requests Queued\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\ASP.NET\\Requests Rejected\" sampleRate=\"PT3M\" /> <PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT3M\" /> </PerformanceCounters> </DiagnosticMonitorConfiguration> </WadCfg>')]",
                            "storageAccount": "[toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))]"
                        },
                        "protectedSettings": {
                            "storageAccountName": "[toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))]",
                            "storageAccountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))), '2015-06-15').key1]",
                            "storageAccountEndPoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))), '2015-06-15').primaryEndpoints.blob]"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {}
}